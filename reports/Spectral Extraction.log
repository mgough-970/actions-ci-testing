Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
x1d_model = MultiSpecModel(x1d_file)
# For a file with multiple spectra, the index to .spec is EXTVAR-1
x1d_wave = x1d_model.spec[0].spec_table.WAVELENGTH
x1d_flux = x1d_model.spec[0].spec_table.FLUX 
if x1d_flux.sum() <= 0:
    x1d_flux = -x1d_flux
fig8 = plt.figure()
x1d8 = plt.plot(x1d_wave, x1d_flux / x1d_flux.max(), label="Pipeline")
opt8 = plt.plot(wavelength, spectrum / spectrum.max(), label="Optimal", alpha=0.7)
lgd8 = plt.legend()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Input [0;32mIn [23][0m, in [0;36m<cell line: 1>[0;34m()[0m
[0;32m----> 1[0m x1d_model [38;5;241m=[39m [43mMultiSpecModel[49m[43m([49m[43mx1d_file[49m[43m)[49m
[1;32m      2[0m [38;5;66;03m# For a file with multiple spectra, the index to .spec is EXTVAR-1[39;00m
[1;32m      3[0m x1d_wave [38;5;241m=[39m x1d_model[38;5;241m.[39mspec[[38;5;241m0[39m][38;5;241m.[39mspec_table[38;5;241m.[39mWAVELENGTH

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/jwst/datamodels/multispec.py:59[0m, in [0;36mMultiSpecModel.__init__[0;34m(self, init, **kwargs)[0m
[1;32m     56[0m     [38;5;28mself[39m[38;5;241m.[39mspec[[38;5;241m0[39m][38;5;241m.[39mspec_table [38;5;241m=[39m init[38;5;241m.[39mspec_table
[1;32m     57[0m     [38;5;28;01mreturn[39;00m
[0;32m---> 59[0m [38;5;28;43msuper[39;49m[43m([49m[43mMultiSpecModel[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m)[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m[43minit[49m[38;5;241;43m=[39;49m[43minit[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/model_base.py:244[0m, in [0;36mDataModel.__init__[0;34m(self, init, schema, memmap, pass_invalid_values, strict_validation, validate_on_assignment, cast_fits_arrays, validate_arrays, ignore_missing_extensions, **kwargs)[0m
[1;32m    241[0m         init_fitsopen [38;5;241m=[39m init
[1;32m    243[0m     hdulist [38;5;241m=[39m fits[38;5;241m.[39mopen(init_fitsopen, memmap[38;5;241m=[39mmemmap)
[0;32m--> 244[0m     asdffile [38;5;241m=[39m [43mfits_support[49m[38;5;241;43m.[39;49m[43mfrom_fits[49m[43m([49m
[1;32m    245[0m [43m        [49m[43mhdulist[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_schema[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_ctx[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m
[1;32m    246[0m [43m    [49m[43m)[49m
[1;32m    247[0m     [38;5;28mself[39m[38;5;241m.[39m_file_references[38;5;241m.[39mappend(_FileReference(hdulist))
[1;32m    249[0m [38;5;28;01melif[39;00m file_type [38;5;241m==[39m [38;5;124m"[39m[38;5;124masdf[39m[38;5;124m"[39m:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/fits_support.py:628[0m, in [0;36mfrom_fits[0;34m(hdulist, schema, context, skip_fits_update, **kwargs)[0m
[1;32m    623[0m [38;5;66;03m# Determine whether skipping the FITS loading can be done.[39;00m
[1;32m    624[0m skip_fits_update [38;5;241m=[39m _verify_skip_fits_update(
[1;32m    625[0m     skip_fits_update, hdulist, ff, context
[1;32m    626[0m )
[0;32m--> 628[0m known_keywords, known_datas [38;5;241m=[39m [43m_load_from_schema[49m[43m([49m
[1;32m    629[0m [43m    [49m[43mhdulist[49m[43m,[49m[43m [49m[43mschema[49m[43m,[49m[43m [49m[43mff[49m[38;5;241;43m.[39;49m[43mtree[49m[43m,[49m[43m [49m[43mcontext[49m[43m,[49m[43m [49m[43mskip_fits_update[49m[38;5;241;43m=[39;49m[43mskip_fits_update[49m
[1;32m    630[0m [43m[49m[43m)[49m
[1;32m    631[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m skip_fits_update:
[1;32m    632[0m     _load_extra_fits(hdulist, known_keywords, known_datas, ff[38;5;241m.[39mtree)

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/fits_support.py:548[0m, in [0;36m_load_from_schema[0;34m(hdulist, schema, tree, context, skip_fits_update)[0m
[1;32m    542[0m                 recurse(schema[[38;5;124m'[39m[38;5;124mitems[39m[38;5;124m'[39m],
[1;32m    543[0m                         path [38;5;241m+[39m [i],
[1;32m    544[0m                         combiner,
[1;32m    545[0m                         {[38;5;124m'[39m[38;5;124mhdu_index[39m[38;5;124m'[39m: i})
[1;32m    546[0m             [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m
[0;32m--> 548[0m [43mmschema[49m[38;5;241;43m.[39;49m[43mwalk_schema[49m[43m([49m[43mschema[49m[43m,[49m[43m [49m[43mcallback[49m[43m)[49m
[1;32m    549[0m [38;5;28;01mreturn[39;00m known_keywords, known_datas

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/schema.py:149[0m, in [0;36mwalk_schema[0;34m(schema, callback, ctx)[0m
[1;32m    147[0m [38;5;28;01mif[39;00m ctx [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    148[0m     ctx [38;5;241m=[39m {}
[0;32m--> 149[0m [43mrecurse[49m[43m([49m[43mschema[49m[43m,[49m[43m [49m[43m[[49m[43m][49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m [49m[43mctx[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/schema.py:137[0m, in [0;36mwalk_schema.<locals>.recurse[0;34m(schema, path, combiner, ctx)[0m
[1;32m    135[0m [38;5;28;01mif[39;00m schema[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mtype[39m[38;5;124m'[39m) [38;5;241m==[39m [38;5;124m'[39m[38;5;124mobject[39m[38;5;124m'[39m:
[1;32m    136[0m     [38;5;28;01mfor[39;00m key, val [38;5;129;01min[39;00m schema[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mproperties[39m[38;5;124m'[39m, {})[38;5;241m.[39mitems():
[0;32m--> 137[0m         [43mrecurse[49m[43m([49m[43mval[49m[43m,[49m[43m [49m[43mpath[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43m[[49m[43mkey[49m[43m][49m[43m,[49m[43m [49m[43mcombiner[49m[43m,[49m[43m [49m[43mctx[49m[43m)[49m
[1;32m    139[0m [38;5;28;01mif[39;00m schema[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mtype[39m[38;5;124m'[39m) [38;5;241m==[39m [38;5;124m'[39m[38;5;124marray[39m[38;5;124m'[39m:
[1;32m    140[0m     items [38;5;241m=[39m schema[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mitems[39m[38;5;124m'[39m, {})

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/schema.py:124[0m, in [0;36mwalk_schema.<locals>.recurse[0;34m(schema, path, combiner, ctx)[0m
[1;32m    123[0m [38;5;28;01mdef[39;00m [38;5;21mrecurse[39m(schema, path, combiner, ctx):
[0;32m--> 124[0m     [38;5;28;01mif[39;00m [43mcallback[49m[43m([49m[43mschema[49m[43m,[49m[43m [49m[43mpath[49m[43m,[49m[43m [49m[43mcombiner[49m[43m,[49m[43m [49m[43mctx[49m[43m,[49m[43m [49m[43mrecurse[49m[43m)[49m:
[1;32m    125[0m         [38;5;28;01mreturn[39;00m
[1;32m    127[0m     [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m [[38;5;124m'[39m[38;5;124mallOf[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mnot[39m[38;5;124m'[39m]:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/fits_support.py:542[0m, in [0;36m_load_from_schema.<locals>.callback[0;34m(schema, path, combiner, ctx, recurse)[0m
[1;32m    540[0m [38;5;28;01mif[39;00m has_fits_hdu:
[1;32m    541[0m     [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(max_extver):
[0;32m--> 542[0m         [43mrecurse[49m[43m([49m[43mschema[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mitems[39;49m[38;5;124;43m'[39;49m[43m][49m[43m,[49m
[1;32m    543[0m [43m                [49m[43mpath[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43m[[49m[43mi[49m[43m][49m[43m,[49m
[1;32m    544[0m [43m                [49m[43mcombiner[49m[43m,[49m
[1;32m    545[0m [43m                [49m[43m{[49m[38;5;124;43m'[39;49m[38;5;124;43mhdu_index[39;49m[38;5;124;43m'[39;49m[43m:[49m[43m [49m[43mi[49m[43m}[49m[43m)[49m
[1;32m    546[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/schema.py:137[0m, in [0;36mwalk_schema.<locals>.recurse[0;34m(schema, path, combiner, ctx)[0m
[1;32m    135[0m [38;5;28;01mif[39;00m schema[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mtype[39m[38;5;124m'[39m) [38;5;241m==[39m [38;5;124m'[39m[38;5;124mobject[39m[38;5;124m'[39m:
[1;32m    136[0m     [38;5;28;01mfor[39;00m key, val [38;5;129;01min[39;00m schema[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mproperties[39m[38;5;124m'[39m, {})[38;5;241m.[39mitems():
[0;32m--> 137[0m         [43mrecurse[49m[43m([49m[43mval[49m[43m,[49m[43m [49m[43mpath[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43m[[49m[43mkey[49m[43m][49m[43m,[49m[43m [49m[43mcombiner[49m[43m,[49m[43m [49m[43mctx[49m[43m)[49m
[1;32m    139[0m [38;5;28;01mif[39;00m schema[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mtype[39m[38;5;124m'[39m) [38;5;241m==[39m [38;5;124m'[39m[38;5;124marray[39m[38;5;124m'[39m:
[1;32m    140[0m     items [38;5;241m=[39m schema[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mitems[39m[38;5;124m'[39m, {})

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/schema.py:124[0m, in [0;36mwalk_schema.<locals>.recurse[0;34m(schema, path, combiner, ctx)[0m
[1;32m    123[0m [38;5;28;01mdef[39;00m [38;5;21mrecurse[39m(schema, path, combiner, ctx):
[0;32m--> 124[0m     [38;5;28;01mif[39;00m [43mcallback[49m[43m([49m[43mschema[49m[43m,[49m[43m [49m[43mpath[49m[43m,[49m[43m [49m[43mcombiner[49m[43m,[49m[43m [49m[43mctx[49m[43m,[49m[43m [49m[43mrecurse[49m[43m)[49m:
[1;32m    125[0m         [38;5;28;01mreturn[39;00m
[1;32m    127[0m     [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m [[38;5;124m'[39m[38;5;124mallOf[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mnot[39m[38;5;124m'[39m]:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/fits_support.py:526[0m, in [0;36m_load_from_schema.<locals>.callback[0;34m(schema, path, combiner, ctx, recurse)[0m
[1;32m    522[0m             properties[38;5;241m.[39mput_value(path, result, tree)
[1;32m    524[0m [38;5;28;01melif[39;00m [38;5;124m'[39m[38;5;124mfits_hdu[39m[38;5;124m'[39m [38;5;129;01min[39;00m schema [38;5;129;01mand[39;00m (
[1;32m    525[0m         [38;5;124m'[39m[38;5;124mmax_ndim[39m[38;5;124m'[39m [38;5;129;01min[39;00m schema [38;5;129;01mor[39;00m [38;5;124m'[39m[38;5;124mndim[39m[38;5;124m'[39m [38;5;129;01min[39;00m schema [38;5;129;01mor[39;00m [38;5;124m'[39m[38;5;124mdatatype[39m[38;5;124m'[39m [38;5;129;01min[39;00m schema):
[0;32m--> 526[0m     result [38;5;241m=[39m [43m_fits_array_loader[49m[43m([49m
[1;32m    527[0m [43m        [49m[43mhdulist[49m[43m,[49m[43m [49m[43mschema[49m[43m,[49m[43m [49m[43mctx[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mhdu_index[39;49m[38;5;124;43m'[39;49m[43m)[49m[43m,[49m[43m [49m[43mknown_datas[49m[43m,[49m[43m [49m[43mcontext[49m[43m)[49m
[1;32m    529[0m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m context[38;5;241m.[39m_validate_on_assignment:
[1;32m    530[0m         validate[38;5;241m.[39mvalue_change(path, result, schema, context)

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/fits_support.py:478[0m, in [0;36m_fits_array_loader[0;34m(hdulist, schema, hdu_index, known_datas, context)[0m
[1;32m    475[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mNone[39;00m
[1;32m    477[0m known_datas[38;5;241m.[39madd(hdu)
[0;32m--> 478[0m [38;5;28;01mreturn[39;00m [43mfrom_fits_hdu[49m[43m([49m[43mhdu[49m[43m,[49m[43m [49m[43mschema[49m[43m,[49m[43m [49m[43mcontext[49m[38;5;241;43m.[39;49m[43m_cast_fits_arrays[49m[43m)[49m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/fits_support.py:667[0m, in [0;36mfrom_fits_hdu[0;34m(hdu, schema, cast_arrays)[0m
[1;32m    664[0m     listeners [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m    666[0m [38;5;66;03m# Cast array to type mentioned in schema[39;00m
[0;32m--> 667[0m data [38;5;241m=[39m [43mproperties[49m[38;5;241;43m.[39;49m[43m_cast[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mschema[49m[43m)[49m
[1;32m    669[0m [38;5;66;03m# Casting a table loses the column listeners, so restore them[39;00m
[1;32m    670[0m [38;5;28;01mif[39;00m listeners [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/properties.py:84[0m, in [0;36m_cast[0;34m(val, schema)[0m
[1;32m     81[0m             t[[38;5;124m'[39m[38;5;124mshape[39m[38;5;124m'[39m] [38;5;241m=[39m shape
[1;32m     83[0m dtype [38;5;241m=[39m ndarray[38;5;241m.[39masdf_datatype_to_numpy_dtype(schema[[38;5;124m'[39m[38;5;124mdatatype[39m[38;5;124m'[39m])
[0;32m---> 84[0m val [38;5;241m=[39m [43mutil[49m[38;5;241;43m.[39;49m[43mgentle_asarray[49m[43m([49m[43mval[49m[43m,[49m[43m [49m[43mdtype[49m[43m)[49m
[1;32m     86[0m [38;5;28;01mif[39;00m dtype[38;5;241m.[39mfields [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     87[0m     val [38;5;241m=[39m _as_fitsrec(val)

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/stdatamodels/util.py:59[0m, in [0;36mgentle_asarray[0;34m(a, dtype)[0m
[1;32m     57[0m     out_dtype[38;5;241m.[39mnames [38;5;241m=[39m in_dtype[38;5;241m.[39mnames
[1;32m     58[0m [38;5;28;01melse[39;00m:
[0;32m---> 59[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m     60[0m         [38;5;124m"[39m[38;5;124mColumn names don[39m[38;5;124m'[39m[38;5;124mt match schema. [39m[38;5;124m"[39m
[1;32m     61[0m         [38;5;124m"[39m[38;5;124mSchema has [39m[38;5;132;01m{0}[39;00m[38;5;124m. Data has [39m[38;5;132;01m{1}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat(
[1;32m     62[0m             [38;5;28mstr[39m(out_names[38;5;241m.[39mdifference(in_names)),
[1;32m     63[0m             [38;5;28mstr[39m(in_names[38;5;241m.[39mdifference(out_names))))
[1;32m     65[0m new_dtype [38;5;241m=[39m []
[1;32m     66[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;28mlen[39m(out_dtype[38;5;241m.[39mfields)):

[0;31mValueError[0m: Column names don't match schema. Schema has {'flux_var_rnoise', 'bkgd_var_poisson', 'flux_error', 'sb_var_poisson', 'flux_var_poisson', 'sb_var_flat', 'bkgd_var_flat', 'bkgd_var_rnoise', 'flux_var_flat', 'sb_var_rnoise', 'bkgd_error'}. Data has {'error', 'berror'}
ValueError: Column names don't match schema. Schema has {'flux_var_rnoise', 'bkgd_var_poisson', 'flux_error', 'sb_var_poisson', 'flux_var_poisson', 'sb_var_flat', 'bkgd_var_flat', 'bkgd_var_rnoise', 'flux_var_flat', 'sb_var_rnoise', 'bkgd_error'}. Data has {'error', 'berror'}

