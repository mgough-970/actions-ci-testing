Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# We plot the field of view of the simulated images (blue) on top of the source catalogue (red)

fig = plt.figure(num=None, figsize=(12, 12), dpi=80, facecolor='w', edgecolor='k')
ax = fig.add_subplot(111)

ax.scatter(pointsource_ra, pointsource_dec, c='red', label='Catalog point sources', s=0.1)

for m in range(len(files)):
    rect1 = matplotlib.patches.Polygon(coord[m], edgecolor='red', 
                                       facecolor='blue', alpha=0.2)
    ax.add_patch(rect1)
rect1.set_label('Detector')

# These limits correspond to the LMC 
plt.xlim([80.2, 80.8]) # alpha
plt.ylim([-69.4, -69.6]) # delta
plt.xlabel('RA (degrees)')
plt.ylabel('Dec (degrees)')
plt.title('F150W Mosaic')
#plt.axis('scaled')

plt.legend()
plt.show()


------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Input [0;32mIn [8][0m, in [0;36m<cell line: 12>[0;34m()[0m
[1;32m      9[0m     rect1 [38;5;241m=[39m matplotlib[38;5;241m.[39mpatches[38;5;241m.[39mPolygon(coord[m], edgecolor[38;5;241m=[39m[38;5;124m'[39m[38;5;124mred[39m[38;5;124m'[39m, 
[1;32m     10[0m                                        facecolor[38;5;241m=[39m[38;5;124m'[39m[38;5;124mblue[39m[38;5;124m'[39m, alpha[38;5;241m=[39m[38;5;241m0.2[39m)
[1;32m     11[0m     ax[38;5;241m.[39madd_patch(rect1)
[0;32m---> 12[0m [43mrect1[49m[38;5;241m.[39mset_label([38;5;124m'[39m[38;5;124mDetector[39m[38;5;124m'[39m)
[1;32m     14[0m [38;5;66;03m# These limits correspond to the LMC [39;00m
[1;32m     15[0m plt[38;5;241m.[39mxlim([[38;5;241m80.2[39m, [38;5;241m80.8[39m]) [38;5;66;03m# alpha[39;00m

[0;31mNameError[0m: name 'rect1' is not defined
NameError: name 'rect1' is not defined

